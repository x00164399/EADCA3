@page "/"
@using GameSales.Games
<PageTitle>Index</PageTitle>

<div class="row">
    <div class="column">
        <h1>Discounted Gaming</h1>
    </div>
    <div class="column">
        <p class="webdisc" style="text-align:center">Current Great Deals</p>
    </div>
    <div class="column">
        <form method="get">
            <div class="input-group">
                <input id="Search"/>
                <div class="input-group-apppend">
                    <button type="submit" class="btn-primary">Search</button>
                </div>
            </div>
        </form>
    </div>
</div>


<div>
    <div class="row">
        @foreach (var Game in listOfGames.Games)
        {
            <div class="col-2">
                <div class="card gamecard" style="width: 17rem;border-radius: 30px; background-color: #00FFFF">
                    <img class="card-img-top" style="border-radius: 30px;" src="@Game.thumb" />
                    <div class="card-body">
                        <h5 class="title">@Game.title</h5>
                        <p class="card-text">Original Price: @Game.normalPrice</p>
                        <p class="card-text">Disccounted Price: @Game.salePrice</p>
                    </div>
                </div>
           </div>
        }
    </div>
</div>

<style>
    h1{
        font-size: 30px;
        font-weight: 500;
        background-image: linear-gradient( #FC4445, #FC4444);
        color: transparent;
        background-clip: text;
        -webkit-background-clip: text;
    }
    p.webdisc{
        font-size: 30px;
        font-weight: 300;
        background-image: linear-gradient( #FC4445, #FC4444);
        color: transparent;
        background-clip: text;
        -webkit-background-clip: text;
    }
    h5.title{
        text-decoration-color: #Fc4445;
    }

    .column {
        float: left;
        width: 33.33%;
    }

    .columns:after {
        content: "";
        display: table;
        clear: both;
    }
    card.gamecard{
        background-color: #3FEEE6;
    }
</style>

@code{
    GameList listOfGames = new GameList();
    async Task AddInfo()
    {
        //creating a string to hold the url for api
        string _baseUrl = "https://www.cheapshark.com/api/1.0/deals?";
        //try connecting to the api
        try
        {
            using (HttpClient httpclient = new HttpClient())
            {
                //getting a response from the api
                using (HttpResponseMessage respmsg = await httpclient.GetAsync(_baseUrl))
                {
                    //getting the content
                    using (HttpContent httpcontent = respmsg.Content)
                    {
                        //if successfull and there is information, add the information into the list
                        var info = await httpcontent.ReadAsStringAsync();
                        if (info != null)
                        {
                            listOfGames.Games = JsonSerializer.Deserialize<List<Game>>(info);
                        }
                        //if there is no information to be gathered display an error
                        else
                        {
                            throw new ArgumentException("No Info.");
                        }
                    }
                }
            }
        }
        //display error if it cant connect to the api
        catch (Exception e)
        {
            Console.WriteLine(e.Message);
        }
    }
    protected async override Task OnInitializedAsync()
    {
        await AddInfo();
        //printing all games in the console
        foreach (Game g in listOfGames.Games)
        {
            Console.WriteLine(g);
        }
    }
    // ** Trying to Implement Search Function ** //
    // ** for some reason wasent able to add users input into a string and attach to the end of the url for api ** //
    //public string? Search;
    ////connecting to the api and taking information from it
    ////making a list of games
    //GameList listOfGames = new GameList();
    //async Task AddInfo(){

    //    //creating a string to hold the url for api
    //    string _baseUrl = "https://www.cheapshark.com/api/1.0/games?title=";
    //    //try connecting to the api
    //    try
    //    {
    //        using (HttpClient httpclient = new HttpClient())
    //        {
    //            string uri = _baseUrl + Search;
    //            //getting a response from the api
    //            using (HttpResponseMessage respmsg = await httpclient.GetAsync(uri))
    //            {
    //                Console.WriteLine(uri);
    //                Console.WriteLine(Search);
    //                //getting the content
    //                using (HttpContent httpcontent = respmsg.Content)
    //                {
    //                    //if successfull and there is information, add the information into the list
    //                    var info = await httpcontent.ReadAsStringAsync();
    //                    if (info != null){
    //                        listOfGames.Games = JsonSerializer.Deserialize<List<Game>>(info);
    //                    }
    //                    //if there is no information to be gathered display an error
    //                    else
    //                    {
    //                        throw new ArgumentException("No Info.");
    //                    }
    //                }
    //            }
    //        }
    //    }
    //    //display error if it cant connect to the api
    //    catch (Exception e){
    //        Console.WriteLine(e.Message);
    //    }
    //}
    //protected async override Task OnInitializedAsync(){
    //    await AddInfo();
    //    //printing all games in the console
    //    foreach(Game g in listOfGames.Games){
    //        Console.WriteLine(g);
    //    }
    //}
}